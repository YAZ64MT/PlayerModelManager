# Config file for an example Majora's Mask: Recompiled mod.

# Fields that end up in the mod's manifest.
[manifest]

# Unique ID of this mod. Pick something long enough that it'll never be the same as any other mod.
# The name displayed in the mod management menu is separate from this so this doesn't need to be human readable.
id = "yazmt_mm_playermodelmanager"

# Version of this mod.
version = "0.0.12"

# The name that will show up for this mod in the mod menu. This should be human readable.
display_name = "Player Model Manager"

# The description that will show up when this mod is displayed in the mod menu. This should be human readable.
description =  """
This is a mod for Majora's Mask: Recompiled that allows Link's model to be swapped out on the fly.

To load ModLoader64 zobjs, throw them in a zobj folder in your MM Recomp mods folder.

To open the model menu, use the button combo you have configured. By default, it is L + A.

This is a testing build. Please do not distribute it since several features need to be finalized.
"""

# A short description that will show up in this mod's entry in the mod list. This should be human readable and kept short
# to prevent it from being cut off due to the limited space.
short_description = "Customize Link's model."

# Authors of this mod.
authors = [ "Neirn" ]

# ID of the target recomp game.
game_id = "mm"

# Minimum version of the target recomp (e.g. Zelda 64: Recompiled) that this mod can run on.
minimum_recomp_version = "1.2.1"

# Dependency mods. Each entry is the mod's ID and then an optional minimum version of the dependency mod.
dependencies = [
# Example dependency:
#    "modname:1.0.0"
    "yazmt_mm_global_objects",
    "yazmt_mm_modelreplacer",
    "ProxyMM_KV:0.0.5",
    "yazmt_mm_corelib"
]

# Native libraries (e.g. DLLs) and the functions they export.
native_libraries = [
# Example native library:
#    { name = "my_native_library", funcs = ["my_native_library_function"] }
]

# Inputs to the mod tool.
[inputs]

# Input elf file to generate a mod from.
elf_path = "build/mod.elf"

# Output mod filename.
mod_filename = "yazmt_mm_playermodelmanager"

# Reference symbol files.
func_reference_syms_file = "Zelda64RecompSyms/mm.us.rev1.syms.toml"
data_reference_syms_files = [ "Zelda64RecompSyms/mm.us.rev1.datasyms.toml", "Zelda64RecompSyms/mm.us.rev1.datasyms_static.toml" ]

# Additional files to include in the mod.
additional_files = [ "thumb.png" ]

[[manifest.config_options]]
id = "open_menu_buttons"
name = "Open Menu Button Combo"
description = """
Set the combination of buttons to open the model selection menu.

NONE:
Selection menu opening disabled.

L + R:
Map Button + Shield Button

L + A:
Map Button + Action Button
"""
type = "Enum"
options = [ "NONE", "L + R", "L + A" ]
default = "L + A"

[[manifest.config_options]]
id = "is_live_preview_enabled"
name = "Preview Models"
description = """
Enable or disable the model preview.

With this feature ON, the model will be shown when you hover over it.

With this feature OFF, the model will not be shown unless you explicitly press on it.

Changes to this option will apply the next time the model selection menu is open.
"""
type = "Enum"
options = [ "OFF", "ON" ]
default = "ON"

[[manifest.config_options]]
id = "is_modify_tunic_color"
name = "Set Tunic Color"
description = """
Some models may have a colorable tunic.

If they do, this option is necessary to render the tunic properly in Majora's Mask.

This option may conflict with other tunic color mods, so feel free to disable it.
"""
type = "Enum"
options = [ "OFF", "ON" ]
default = "ON"

[[manifest.config_options]]
id = "tunic_color"
name = "Tunic Color"
description = "Hex string color value of tunic.\n\nDoes nothing if 'Set Tunic Color' is disabled.\n\nDefault: 1E691B"
type = "String"
default = "1E691B"
